from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from keyboards import get_city_ikb, get_now_workshop_ikb, get_web_app

router = Router()

class FSMService(StatesGroup):
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ State, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    # –ø–µ—Ä–µ—á–∏—Å–ª—è—è –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è
    # –±–æ—Ç –≤ —Ä–∞–∑–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

    city = State()      # –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞
    workplace = State()  # –í—ã–±–æ—Ä —Ü–µ—Ö–∞
    app = State()


@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext) -> None:

    cities = ['–°—É—Ä–≥—É—Ç']

    await message.answer('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–î–ª—è –ø–µ—á–∞—Ç–∏ —ç—Ç–∏–∫–µ—Ç–∫–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ üëá',
                         reply_markup=await get_city_ikb(cities))
    await state.set_state(FSMService.workplace)


@router.callback_query(StateFilter(FSMService.workplace))
async def get_login_aurhorize(callback: Message, state: FSMContext, bot: Bot):
    selected_city = callback.data
    await state.update_data(city=selected_city)

    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ—Ö üëá',
                                     reply_markup=await get_now_workshop_ikb())
    await state.set_state(FSMService.app)


@router.callback_query(StateFilter(FSMService.app))
async def get_app(callback: Message, state: FSMContext, bot: Bot):
    selected_workspace = callback.data
    await state.update_data(workspace=selected_workspace)
    user_data = await state.get_data()
    selected_city = user_data.get('city')
    selected_workspace = user_data.get('workspace')

    await callback.message.answer(f'–ì–æ—Ä–æ–¥: <b>{selected_city}</b>\n'
                                  f'–¶–µ—Ö: <b>{selected_workspace}</b>\n'
                                  f'–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ üëá',
                                  reply_markup=await get_web_app(selected_city, selected_workspace,
                                                                 callback.from_user.id))






